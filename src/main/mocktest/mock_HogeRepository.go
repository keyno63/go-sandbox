// Code generated by MockGen. DO NOT EDIT.
// Source: HogeRepository.go

// Package teratail is a generated GoMock package.
package mocktest

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHogeRepository is a mock of HogeRepository interface.
type MockHogeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockHogeRepositoryMockRecorder
}

// MockHogeRepositoryMockRecorder is the mock recorder for MockHogeRepository.
type MockHogeRepositoryMockRecorder struct {
	mock *MockHogeRepository
}

// NewMockHogeRepository creates a new mock instance.
func NewMockHogeRepository(ctrl *gomock.Controller) *MockHogeRepository {
	mock := &MockHogeRepository{ctrl: ctrl}
	mock.recorder = &MockHogeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHogeRepository) EXPECT() *MockHogeRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockHogeRepository) Get() (User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockHogeRepositoryMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockHogeRepository)(nil).Get))
}
